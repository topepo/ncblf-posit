{"title":"~~RStudio~~ Posit Tools for Data Science","markdown":{"yaml":{"title":"~~RStudio~~ Posit Tools for Data Science","format":{"revealjs":{"slide-number":true,"footer":"<https://topepo.github.io/ncblf-posit>","include-before-body":"header.html","include-after-body":"footer-annotations.html","theme":["default","tidymodels.scss"],"width":1280,"height":720}},"knitr":{"opts_chunk":{"echo":true,"collapse":true,"comment":"#>"}}},"headingText":"| label: startup","containsRefs":false,"markdown":"\n\n```{r}\n#| include: false\n\noptions(digits = 4, width = 85)\noptions(dplyr.print_min = 6, dplyr.print_max = 6)\noptions(cli.width = 85)\noptions(crayon.enabled = FALSE)\noptions(pillar.advice = FALSE, pillar.min_title_chars = Inf)\n\nlibrary(gt)\n```\n\n## Who are we? \n\nPosit (n√©e RStudio) is a [public benefit corporation](https://posit.co/about/pbc-report/) that creates open source and commercial products for data science. \n\nAs of this week, we are 381 people. About 50 people work solely on free open-source projects (about 40% - 50% of engineering). \n\nWe are mostly remote, across almost every continent. HQ is in Boston. \n\n\n## Posit's Data Science Menu\n\nWe'll look at tooling for a couple of areas:\n\n-   Data handling and manipulation\n-   Visualization\n-   Data analysis and modeling\n-   Reporting\n-   Potpourri for \\$500\n\nWe'll mostly stick to R stuff but will accentuate a few python tools. 99% of what I'll talk about is free. \n\n# The IDE (aka \"RStudio\")\n\n# Data handling and manipulation\n\n## Data ingestion\n\nGetting your data in and formatting/manipulating it.\n\nNon-posit:\n\n-   [`arrow`](https://arrow.apache.org/docs/r/): Read arrow files\n-   [`sas7bdat`](https://cran.r-project.org/web/packages/sas7bdat/index.html): Read SAS files\n-   R has a very rich set of data base tools (see the [Task Vew](https://cran.r-project.org/web/views/Databases.html))\n-   [`duckdb`](https://github.com/duckdb/duckdb): DuckDB Database Management System\n-   [`foreign`](https://cran.r-project.org/web/packages/foreign/index.html) Reads in data from SAS, SPSS, etc.\n\n## Posit data ingestion\n\n-   [`readr`](https://readr.tidyverse.org): Read excel files (.xls and .xlsx) into R\n-   [`vroom`](https://vroom.r-lib.org/): Fast reading of delimited files\n-   [`googlesheets4`](https://googlesheets4.tidyverse.org): Google Spreadsheets R AP\n-   [`haven`](https://haven.tidyverse.org): Read SPSS, Stata and SAS files from R\n-   [`rvest`](https://rvest.tidyverse.org): Simple web scraping for R\n\n## Example code - tidyverse\n\n```{r}\n#| label: tv-load\n#| message: true\nlibrary(tidyverse)\n```\n\nNot familiar with the tidyverse? Your best resource to learn is [*R for Data Science*](https://r4ds.hadley.nz).\n\n## Reading in csv data\n\n`Entries.csv` a 30mb file of daily train data:\n\n```{r}\n#| label: train-read\n#| echo: true\n\nsystem.time(raw_data <- read_csv(\"Entries.csv\"))\n```\n\n## What's in that data set?\n\n```{r}\n#| label: train-str\n#| echo: true\n\nglimpse(raw_data)\n```\n\nHmm. Let's make the dates actual dates:\n\n```{r}\n#| label: dates\n#| echo: true\n\nraw_data <- \n  raw_data %>% \n  mutate(date = mdy(date))\n\nclass(raw_data$date)\n```\n\n## tidyverse and data manipulations\n\nThe code on the last slide accentuates how easy it is to code (and read code) when you need to do several things when using the pipe operator.\n\n```{r}\n#| label: pipes\n#| echo: true\nraw_data %>% \n  filter(station_id <= 40030 & date <= ymd(\"2001-01-06\")) %>%\n  select(-daytype, -station_id, Date = date) %>% \n  pivot_wider(id_cols = Date, names_from = stationname, values_from = rides)\n```\n\n```{r}\n#| label: stations\n#| include: false\nthree_stations <- \n  raw_data %>% \n  filter(station_id <= 40030 & date <= ymd(\"2001-01-06\")) %>%\n  select(-daytype, -station_id, Date = date) %>% \n  pivot_wider(id_cols = c(Date), \n              names_from = stationname, values_from = rides)\n```\n\n## Data manipulation\n\nBesides the tidyverse packages, there are a ton of open-source packages for manipulating data\n\n-   [`glue`](https://glue.tidyverse.org): Glue strings to data in R. Small, fast, dependency free\n-   [`forcats`](https://forcats.tidyverse.org/): Tools for working with categorical variables\n-   [`fs`](hhttps://fs.r-lib.org/): Provide cross platform file operations\n-   [`clock`](https://clock.r-lib.org/): A Date-Time Library for R\n-   [`sparklyr`](https://spark.rstudio.com): R interface to Apache Spark\n\nplus all of the `d{*}plyr` packages...\n\n# Visualization\n\n## `gg{*}` and others\n\nWe'll, there's [`ggplot2`](https://ggplot2-book.org) and that covers a lot. Some lesser known packages and tools...\n\n* [`ggaminate`](https://gganimate.com) non-interactive animations (e.g. gif, mp4) [(example)](https://www.tmwr.org/sa_search.mp4)\n* [`plotly`](https://plotly-r.com) interactive plots, can convert ggplots [(example)](https://bookdown.org/max/FES/text-data.html#fig:categorical-volcano)\n\nNot really ggplot: \n\n* [`leaflet`](https://rstudio.github.io/leaflet/) interactive maps [(example)](https://bookdown.org/max/FES/numeric-many-to-many.html#fig:numeric-pc2-map-html)\n* [`flexdashboard`](https://pkgs.rstudio.com/flexdashboard/) easy interactive dashboards for R\n* [`r2d3`](https://rstudio.github.io/r2d3) interface to D3 Visualizations (best hex too)\n\n\n## shiny \n\nIt is is a popular R package and web application framework that makes it easy to tell data stories in interactive point-and-click web applications.\n\nTwo big things that are works-in-progress: \n\n - The [visual UI editor](https://rstudio.github.io/shinyuieditor/articles/ui-editor-live-demo.html)\n - Shiny for [python](https://shiny.rstudio.com/py/)\n\n\n# Data analysis and modeling\n\n## A selection of our modeling tools\n\nThere is *a lot* to talk about here:\n\n-   tidymodels\n-   keras\n-   torch\n-   vetiver\n\n## tidymodels\n\n... is a framework for statistical and machine learning models using tidyverse syntax.\n\nBasically [`caret`](https://topepo.github.io/caret) on steroids. Can also access the [`h2o`](https://h2o.ai) modeling framework. \n\nIf you want more details:\n\n-   [RStudio conference keynote](https://www.rstudio.com/conference/2022/keynotes/applied-machine-learning/)\n-   [tidymodels.org](https://www.tidymodels.org)\n-   [*Tidy Modeling with R* book](https://www.tmwr.org)\n\n## Preparing your data using recipes\n\nThe `recipes` package helps prepare your data prior to modeling. \n\nYou can think of it as a better version of `model.matrix()` crossed with `dplyr`. \n\nHere's a hypothetical example: \n\n```r\nrec <- \n  recipe(outcome ~ ., data = data_set) %>% \n  step_mutate(log_x1 = log10(x1)) %>% \n  step_rm(x1) %>% \n  step_other(starts_with(\"zip\"), threshold = 1 / 100) %>% \n  step_dummy(all_nominal_predictors()) %>% \n  step_zv(all_predictors()) %>% \n  step_normalize(all_numeric_predictors()) %>% \n  step_pca(all_numeric_predictors(), num_comp = 10)  # or num_comp = tune()\n```\n\n\n## tensorflow/keras\n\n(Mostly just called \"tensorflow\" now) \n\nThese are deep learning libraries in python. \n\nThere are a lot of tensorflow related R packages that access the *python* machine learning functionality (just like it does for C, java, etc).\n\n - An excellent R package called [`reticulate`](https://rstudio.github.io/reticulate/) provides the means to access all of python via R.\n\nTo get started, see the [tensorflow website](https://tensorflow.rstudio.com) and the R version of Chollet's [deep learning book](https://www.manning.com/books/deep-learning-with-r-second-edition)\n\n## torch\n\nAnother machine learning library.\n\n-   Rather than using python as an intermediary, it bundles the C++ files in the R package.\n\nIt can be used as an additional computing environment within R.\n\nSome places to get more information:\n\n-   the `torch` [package website](https://torch.mlverse.org)\n-   [*Deep Learning and Scientific Computing with R torch* book](https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/) (new!)\n-   [`brulee`](https://brulee.tidymodels.org) is an R package that has basic model implementations via torch.\n\n## Vetiver\n\nvetiver has [R](https://rstudio.github.io/vetiver-r/) and [python](https://rstudio.github.io/vetiver-python/stable/) implementations that enable simple versioning and deployment of models.\n\nOverall documentation is at [*MLOps with vetiver*](https://vetiver.rstudio.com).\n\n```{r}\n#| label: vetiver\n#| echo: false\n#| fig-align: center\n#| out-width: 50%\n\nknitr::include_graphics(\"ml_ops_cycle.png\")\n```\n\n# Reporting/Communicating\n\n## **Quarto**!!!!\n\nThis is a new publishing system that does all of the things that Rmarkdown does (docs, pages, books, blogs) with a common syntax. \n\n - Quarto is not built within R; it works with R, python, Julia, and Observable. \n - Can publish to HTML, PDF, Epub, markdown, _Confluence_, and so on. \n - It encourages interactivity in documents. \n - Plenty of examples for documents, websites, books and so on in the [gallery](https://quarto.org/docs/gallery/)\n \n## Quarto\n\nIf you've used `knitr` and Rmarkdown, you will feel very comfortable with Quarto. \n\nCode chunks have options _in-line_: \n\n````\n```{{r}}\n#| label: fig-ggplot\n#| fig-cap: !expr ggplot_caption_object\n#| fig-width: 6\n#| fig-height: 4.25\n#| out-width: 70%\n\nmtcars %>% ggplot(aes(disp, mpg)) + geom_point()\n```\n````\n\n## The gt package\n\nPeople seem to _loooove_ tools for making tables in documents. \n\nThe [`gt`](https://gt.rstudio.com) package is a nice addition to set of table packages. \n\n```{r}\n#| label: gt-code\n#| eval: false\nlibrary(gt)\nthree_stations %>% \n  gt() %>% \n  tab_header(\n    title = \"Chicago Train Ridership\",\n  ) %>%\n  tab_spanner(\n    label = \"Riders/Day\",\n    columns = c(-Date)\n  )\n```\n\n## \n\n```{r}\n#| label: gt-res\n#| echo: false\nlibrary(gt) \nthree_stations %>% \n  gt() %>% \n  tab_header(\n    title = \"Chicago Train Ridership\",\n  ) %>%\n  tab_spanner(\n    label = \"Riders/Day\",\n    columns = c(-Date)\n  )\n```\n\n\n## Posit Workbench and Connect `r emo::ji(\"dollar\")`\n\n```{r}\n#| label: rsc\n#| echo: false\n#| fig-align: center\n#| out-width: 80%\n\nknitr::include_graphics(\"solutions.png\")\n```\n\n\n\n# Potpourri\n\n## webR\n\nThis is a good example of how we are often competing with ourselves. \n\nwebR is a tool that will compile R into machine readable code and embed it in a website. \n\nAll of the resources are from your local machine. [Let's play!](https://webr.r-wasm.org/latest/)\n\n\nGood summaries: \n\n - [\"webR 0.1.0 has been released\"](https://www.tidyverse.org/blog/2023/03/webr-0-1-0/)\n - [\"How to run R code in the browser with webR\"](https://blog.djnavarro.net/posts/2023-04-09_webr/)\n - [\"WebR: R compiled for WebAssembly and running in the browser\"](https://www.rstudio.com/conference/2022/talks/webr-r-compiled-for-webassembly/)"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"svg","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","include-before-body":["header.html"],"include-after-body":["footer-annotations.html"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.2.335","auto-stretch":true,"title":"~~RStudio~~ Posit Tools for Data Science","knitr":{"opts_chunk":{"echo":true,"collapse":true,"comment":"#>"}},"slideNumber":true,"footer":"<https://topepo.github.io/ncblf-posit>","theme":["default","tidymodels.scss"],"width":1280,"height":720}}}}